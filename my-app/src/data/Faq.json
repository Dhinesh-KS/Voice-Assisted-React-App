[
    {
      "id": 1,
      "question": "What can I do here?",
      "answer": "This is a voice assisted app to get to know frequently asked basic react questions. Please tap the mic on right bottom and you can ask questions on react topics"
    },
    {
      "id": 2,
      "question": "What is react?",
      "answer": "React is an open-source, front end, JavaScript library for building user interfaces or UI components. It is maintained by Facebook and a community of individual developers and companies."
    },
    {
      "id": 3,
      "question": "What are React’s Key Features?",
      "answer": "Virtual DOM, JSX, Unidirectional Data Flow, Server-Side Rendering"
    },
    {
      "id": 4,
      "question": "What is JSX?",
      "answer": "JSX is a Javascript syntax extension that allows us to write HTML in our JavaScript to create React Elements."
    },
    {
      "id": 5,
      "question": "What is a Component in React and what are the two main ways to define them?",
      "answer": "Component are an independent reusable piece of the UI. There are two main types of components that make up an application and they are class components and functional components"
    },
    {
      "id": 6,
      "question": "What is class component in react?",
      "answer": "Class components are JavaScript ES2015 classes that extend a base class from React called Component.This gives the class App access to the React lifecycle methods like render as well as state/props functionality from the parent."
    },
    {
      "id": 7,
      "question": "What is a functional component in react?",
      "answer": "Functional components are simpler. They don’t manage their own state or have access to the lifecycle methods provided by React Native. They are literally plain old JavaScript functions, and are sometimes called stateless components."
    },
    {
      "id": 8,
      "question": "What are React Hooks?",
      "answer": "Hooks are New feature in React 16.8. Allows function components to use state and other previous class-only features. Backwards compatible and optional"
    },
    {
      "id": 9,
      "question": "What is Redux?",
      "answer": "Redux is a library for managing application state. Redux is a solution for global state management, allowing you to pass data without the need to pass props through every level (aka props drilling)"
    },
    {
      "id": 10,
      "question": "What are props and state in React?",
      "answer": "Props is the JavaScript object, passed into a Component, that holds the configuration properties. props is immutable by the receiving Component. state is the JavaScript object, managed within the Component, that holds its internal state."
    }
  ]